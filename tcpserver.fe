uses 'network', 'posix', 'sys', './eventloop';

class TcpServerRequest {
	string buffer;
	object socket;
	object handler;
	
	function fillBuffer () {
		self.buffer += self.socket.read(524288);
	}
	
	function handleRequest () {
		self.fillBuffer();
		self.handler.invoke(self);
	}
	
	function close () {
		EventLoop.delete(self.socket);
		self.socket = null;
	}
}

class TcpServer {
	object socket;
	object handler;

	function constructor (number port) {
		self.socket = Network.TCP.bind(Network.ANY,port);
		if (self.socket != null) {
			EventLoop.add(self.socket,self);
		}
		else {
			Sys.error("Unable to open tcp port ${port}",2);
		}
	}
	
	function createRequestObject () {
		return new TcpServerRequest();
	}
	
	function onRequest (object handler) {
		self.handler = handler;
	}
	
	function onRequest () {
		object handler = recipient();
		if (handler) {
			self.onRequest(handler);
		}
	}
	
	function handleRequest () {
		object client_connection = self.socket.accept();
		object request = self.createRequestObject();
		
		client_connection.nonblock();
		request.socket = client_connection;
		request.handler = self.handler;
		
		EventLoop.add(client_connection,request);
	}
}
